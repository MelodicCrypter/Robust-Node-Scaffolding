!function(e){var t={};function r(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(o,n,function(t){return e[t]}.bind(null,n));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=7)}([function(e,t){e.exports=require("path")},function(e,t){e.exports=require("express")},function(e,t,r){"use strict";var o=r(3),n=r.n(o),i=r(1).Router();i.get("/",n.a.renderAbout),t.a=i},function(e,t,r){var o=r(0);e.exports={renderAbout:function(e,t){t.render("about",{locals:{pageTitle:"Node Scaffolding | Hugh Caluscusin",coverTitle:"This is the About Page - Test only",repoAuthor:"Hugh Caluscusin",repoAuthorSite:"https://www.melodiccrypter.com/",repoAuthorGitLink:"https://github.com/MelodicCrypter",repoLink:"https://github.com/MelodicCrypter/Robust-Node-Scaffolding",handle:"@MelodicCrypter"},partials:{header:o.resolve("views/partials/header.html"),footer:o.resolve("views/partials/footer.html")}})}}},function(e,t,r){"use strict";var o=r(5),n=r.n(o),i=r(1).Router();i.get("/",n.a.renderHome),t.a=i},function(e,t,r){var o=r(0);e.exports={renderHome:function(e,t){t.render("index",{locals:{pageTitle:"Node Scaffolding | Hugh Caluscusin",coverTitle:"Robust-Node-Scaffolding",repoAuthor:"Hugh Caluscusin",repoAuthorSite:"https://www.melodiccrypter.com/",repoAuthorGitLink:"https://github.com/MelodicCrypter",repoLink:"https://github.com/MelodicCrypter/Robust-Node-Scaffolding",handle:"@MelodicCrypter"},partials:{header:o.resolve("views/partials/header.html"),footer:o.resolve("views/partials/footer.html")}})}}},function(e,t,r){"use strict";var o=r(11),n=r(12);t.a=function(e){return o.logger({transports:[new n.transports.File({name:e,filename:e,level:"info",maxsize:5242880,maxFiles:10,json:!0,colorize:!0}),new n.transports.File({name:e,filename:e,level:"debug",maxsize:5242880,maxFiles:10,json:!0,colorize:!0})]})}},function(e,t,r){e.exports=r(8)},function(e,t,r){"use strict";r.r(t),function(e){r(9);var t=r(2),o=r(4),n=r(6),i=r(1),s=r(0),u=r(13),l=r(14),c=r(15),a=r(16),p=i(),f=process.env.PORT,d=s.join(e,"./public/dist/"),h=s.join(e,"./log/");p.engine("html",a),p.set("views","views"),p.set("view engine","html"),p.use(l({origin:!1})),p.use(u()),p.use(i.json({limit:"300kb"})),p.use(i.urlencoded()),p.use(c()),p.use(i.static(d)),p.use(Object(n.a)("".concat(h,"/app-logs.json"))),p.use("/",o.a),p.use("/about",t.a),p.listen(f,function(){console.log("App is listening on port ".concat(f))})}.call(this,"")},function(e,t,r){var o=r(10).env(!0);e.exports={config:o}},function(e,t){e.exports=require("custom-env")},function(e,t){e.exports=require("express-winston")},function(e,t){e.exports=require("winston")},function(e,t){e.exports=require("helmet")},function(e,t){e.exports=require("cors")},function(e,t){e.exports=require("hpp")},function(e,t){e.exports=require("express-es6-template-engine")}]);